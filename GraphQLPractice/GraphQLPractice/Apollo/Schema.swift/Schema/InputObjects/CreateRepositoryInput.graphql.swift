// @generated
// This file was automatically generated and should not be edited.

import ApolloAPI

public extension GraphQLSchema {
  /// Autogenerated input type of CreateRepository
  struct CreateRepositoryInput: InputObject {
    public private(set) var __data: InputDict

    public init(_ data: InputDict) {
      __data = data
    }

    public init(
      clientMutationId: GraphQLNullable<String> = nil,
      description: GraphQLNullable<String> = nil,
      hasIssuesEnabled: GraphQLNullable<Bool>,
      hasWikiEnabled: GraphQLNullable<Bool>,
      homepageUrl: GraphQLNullable<URI> = nil,
      name: String,
      ownerId: GraphQLNullable<ID> = nil,
      teamId: GraphQLNullable<ID> = nil,
      template: GraphQLNullable<Bool>,
      visibility: GraphQLEnum<RepositoryVisibility>
    ) {
      __data = InputDict([
        "clientMutationId": clientMutationId,
        "description": description,
        "hasIssuesEnabled": hasIssuesEnabled,
        "hasWikiEnabled": hasWikiEnabled,
        "homepageUrl": homepageUrl,
        "name": name,
        "ownerId": ownerId,
        "teamId": teamId,
        "template": template,
        "visibility": visibility
      ])
    }

    /// A unique identifier for the client performing the mutation.
    public var clientMutationId: GraphQLNullable<String> {
      get { __data["clientMutationId"] }
      set { __data["clientMutationId"] = newValue }
    }

    /// A short description of the new repository.
    public var description: GraphQLNullable<String> {
      get { __data["description"] }
      set { __data["description"] = newValue }
    }

    /// Indicates if the repository should have the issues feature enabled.
    public var hasIssuesEnabled: GraphQLNullable<Bool> {
      get { __data["hasIssuesEnabled"] }
      set { __data["hasIssuesEnabled"] = newValue }
    }

    /// Indicates if the repository should have the wiki feature enabled.
    public var hasWikiEnabled: GraphQLNullable<Bool> {
      get { __data["hasWikiEnabled"] }
      set { __data["hasWikiEnabled"] = newValue }
    }

    /// The URL for a web page about this repository.
    public var homepageUrl: GraphQLNullable<URI> {
      get { __data["homepageUrl"] }
      set { __data["homepageUrl"] = newValue }
    }

    /// The name of the new repository.
    public var name: String {
      get { __data["name"] }
      set { __data["name"] = newValue }
    }

    /// The ID of the owner for the new repository.
    public var ownerId: GraphQLNullable<ID> {
      get { __data["ownerId"] }
      set { __data["ownerId"] = newValue }
    }

    /// When an organization is specified as the owner, this ID identifies the team
    /// that should be granted access to the new repository.
    public var teamId: GraphQLNullable<ID> {
      get { __data["teamId"] }
      set { __data["teamId"] = newValue }
    }

    /// Whether this repository should be marked as a template such that anyone who
    /// can access it can create new repositories with the same files and directory structure.
    public var template: GraphQLNullable<Bool> {
      get { __data["template"] }
      set { __data["template"] = newValue }
    }

    /// Indicates the repository's visibility level.
    public var visibility: GraphQLEnum<RepositoryVisibility> {
      get { __data["visibility"] }
      set { __data["visibility"] = newValue }
    }
  }

}